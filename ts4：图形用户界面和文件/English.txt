Introduction
The worldwide enterprise software development market wasvalued at $244 billion in 2010 according to information technologyresearch and advisory firm Gartner, which proves the importance ofthis sector globally (Dejaeger, 2012). Yet, the software industry suf-fers from frequent cost overruns (J?rgensen and Mol?kken-?stvold,2006; Uwano et al., 2011; Grimstad et al., 2006). As a consequencethis can lead to serious problems for software companies and some-times even jeopardize their existence (Bloch et al., 2012). It istherefore important as a software development company to min-imize costs as much as possible. In order to do so, activities suchas software effort estimation and software fault prediction can becrucial, and constitute the topic of this paper. Software effort esti-mation is the basis for project bidding, budgeting and planning(J?rgensen and Mol?kken-?stvold, 2006). on the other hand aims to identify error prone software modulesin a timely manner (Lessmann et al., 2008). It is crucial to identifyfaults in the early stages of development since the cost of fixing orreworking software can be surprisingly high if they are detected inthe later phases of the software development life cycle (Dejaegeret al., 2013; Fagan, 1999; Boehm and Papaccio, 1988).In this paper we predict software faults and effort, making use ofdifferent data mining techniques. Data mining entails the processof extracting knowledge from large amounts of data (Vandecruyset al., 2008). In the literature (see e.g. Witten et al., 2011) differenttypes of data mining are discussed such as regression, classificationand association rule mining. Regression and classification are pre-dictive data mining tasks, where the target variable is continuousand discrete respectively. Association rule mining is a descriptivedata mining task and aims at learning frequently occurring pat-terns (Vandecruys et al., 2008). The focus in this research lies onregression for software effort prediction and classification for soft-ware fault prediction. In both cases, statistical predictive models arebuilt in order to generate predictions of new observations (Shmueliand Koppius, 2011). A simplified example for both prediction tasksis presented in Figs. 1 and 2, where it is shown that a classifica-tion or regression model is built based on historical data in order to generate accurate predictions of new observations. Data miningtechniques are applied in many domains. Some well-known exam-ples include credit scoring (Baesens et al., 2003b), churn prediction(Verbeke et al., 2012) and applications in the medical sector such asthe selection of the best in-vitro fertilized embryo (Passmore et al.,2003).Although research on fault and effort prediction often empha-sizes the predictive performance of a model, comprehensibility is an important aspect as well, demanding that the user can under-stand the rationale behind the model¡¯s prediction (Martens andProvost, 2014; Dejaeger et al., 2012). Comprehensibility refers tohow well humans grasp the classifier induced or how strong themental fit of the classifier is (Martens et al., 2011; Maimon andRokach, 2005). There are two main drivers to consider when talkingabout comprehensibility. A first important aspect is type of out-put: i.e. although the comprehensibility of a specific output type islargely domain-dependent, in general, rule-based classifiers can beconsidered as the most comprehensible, and non-linear classifiersas the least comprehensible (Martens et al., 2011). A second driverfor comprehensibility is the size of the output; i.e. smaller mod-els are preferred (Martens et al., 2011). Comprehensible modelsare often needed in order to inspire confidence in a business set-ting (Dejaeger et al., 2013, 2012) and improve model acceptance(Verbeke et al., 2012; Craven and Shavlik, 1996). Also, it facilitatesthe validation of results with domain knowledge, which is impor-tant because intuitiveness will determine whether or not the modelwill be accepted by the end-user (Verbeke et al., 2012). Unfortu-nately, predictive performance and comprehensibility often workin a contradictory way and either must be sacrificed for the other(Martens et al., 2007; Johansson, 2007). That is, any model thattries to achieve both predictive and explanatory power, will have tocompromise somewhat (Shmueli and Koppius, 2011). The purposeof this research is to illuminate whether rule extraction can gener-ate both accurate and meaningful rule-sets for software fault andeffort prediction. Applying rule extraction in these specific domainscan be particularly useful because previous research on fault andeffort prediction shows that non-linear techniques typically givethe best results for these problems. As non-linear techniques yielduninterpretable outputs, rule extraction can have a large addedvalue in order to meet the need for comprehensibility in thesedomains.The remainder of this paper is structured as follows: first, Sec-tion 2 describes the two considered prediction tasks in the field ofsoftware development. An overview of different data mining tech-niques applied in these settings is presented in Section 3. Section 4argues for the application of rule extraction and explains ALPA, therule extraction technique investigated in this study, in more detail.Next, Section 5 presents the setup of the experiments while Sec-tion 6 discusses the results of these experiments. In Section 7, somethreats to validity and interesting topics for future research are setout. The main findings of this study are finally summarized in ashort conclusion.